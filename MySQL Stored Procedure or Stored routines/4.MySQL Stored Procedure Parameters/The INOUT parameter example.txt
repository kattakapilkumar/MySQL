The INOUT parameter example

The following example demonstrates how to use an INOUT parameter in the stored procedure.


DELIMITER $$
CREATE PROCEDURE set_counter(INOUT count INT(4),IN inc INT(4))
BEGIN
	SET count = count + inc;
END$$
DELIMITER ;
1
2
3
4
5
6
DELIMITER $$
CREATE PROCEDURE set_counter(INOUT count INT(4),IN inc INT(4))
BEGIN
 SET count = count + inc;
END$$
DELIMITER ;
How it works.

The set_counter  stored procedure accepts one INOUT  parameter ( count ) and one IN parameter ( inc ).
Inside the stored procedure, we increase the counter ( count ) by the value of the inc parameter.
See how we call the set_counter  stored procedure:


SET @counter = 1;
CALL set_counter(@counter,1); -- 2
CALL set_counter(@counter,1); -- 3
CALL set_counter(@counter,5); -- 8
SELECT @counter; -- 8
1
2
3
4
5
SET @counter = 1;
CALL set_counter(@counter,1); -- 2
CALL set_counter(@counter,1); -- 3
CALL set_counter(@counter,5); -- 8
SELECT @counter; -- 8
In this tutorial, we have shown you how to define parameters in stored procedures, and introduced you to different parameter modes: IN, OUT, and INOUT.