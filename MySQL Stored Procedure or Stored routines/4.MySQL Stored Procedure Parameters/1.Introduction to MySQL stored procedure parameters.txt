Almost stored procedures that you develop require parameters. The parameters make the stored procedure more flexible and useful. In MySQL, a parameter has one of three modes: IN,OUT, or INOUT.

IN – is the default mode. When you define an IN parameter in a stored procedure, the calling program has to pass an argument to the stored procedure. In addition, the value of an IN parameter is protected. It means that even the value of the IN parameter is changed inside the stored procedure, its original value is retained after the stored procedure ends. In other words, the stored procedure only works on the copy of the IN parameter.
OUT – the value of an OUT parameter can be changed inside the stored procedure and its new value is passed back to the calling program. Notice that the stored procedure cannot access the initial value of the OUT parameter when it starts.
INOUT – an INOUT  parameter is the combination of IN  and OUT  parameters. It means that the calling program may pass the argument, and the stored procedure can modify the INOUT parameter and pass the new value back to the calling program.
The syntax of defining a parameter in the stored procedures is as follows:


MODE param_name param_type(param_size)
1
MODE param_name param_type(param_size)
The MODE could be IN , OUT,,or INOUT , depending on the purpose of the parameter in the stored procedure.
The param_name is the name of the parameter. The name of the parameter must follow the naming rules of the column name in MySQL.
Followed the parameter name is its data type and size. Like a variable, the data type of the parameter can be any valid MySQL data type.
Each parameter is separated by a comma (,) if the stored procedure has more than one parameter.

Let’s practice with some examples to get a better understanding. We will use the tables in the sample database for the demonstration.